# Enable policy to run automoc on generated files.
if(POLICY CMP0071)
  cmake_policy(SET CMP0071 NEW)
endif()

# Get all relevant Qt include dirs, to pass them on to shiboken.
get_property(QT_CORE_INCLUDE_DIRS TARGET Qt5::Core PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_GUI_INCLUDE_DIRS TARGET Qt5::Gui PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_SQL_INCLUDE_DIRS TARGET Qt5::Sql PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_WIDGETS_INCLUDE_DIRS TARGET Qt5::Widgets PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_NETWORK_INCLUDE_DIRS TARGET Qt5::Network PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_WEBENGINECORE_INCLUDE_DIRS TARGET Qt5::WebEngineCore PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
get_property(QT_WEBENGINEWIDGETS_INCLUDE_DIRS TARGET Qt5::WebEngineWidgets PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
set(QT_INCLUDE_DIRS
    ${QT_CORE_INCLUDE_DIRS}
    ${QT_GUI_INCLUDE_DIRS}
    ${QT_SQL_INCLUDE_DIRS}
    ${QT_WIDGETS_INCLUDE_DIRS}
    ${QT_NETWORK_INCLUDE_DIRS}
    ${QT_WEBENGINECORE_INCLUDE_DIRS}
    ${QT_WEBENGINEWIDGETS_INCLUDE_DIRS}
)
set(INCLUDES "")
foreach(INCLUDE_DIR ${QT_INCLUDE_DIRS})
    list(APPEND INCLUDES "-I${INCLUDE_DIR}")
endforeach()
get_property(MidoriPrivate_INCLUDE_DIRS TARGET MidoriPrivate PROPERTY INCLUDE_DIRECTORIES)
foreach(INCLUDE_DIR ${MidoriPrivate_INCLUDE_DIRS})
    list(APPEND INCLUDES "-I${INCLUDE_DIR}")
endforeach()

# Set up the options to pass to shiboken.
set(GLOBAL_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/pybhawk_global.h)
set(TYPESYSTEM_FILE ${CMAKE_CURRENT_SOURCE_DIR}/typesystem_pybhawk.xml)

set(SHIBOKEN_OPTIONS --generator-set=shiboken --enable-parent-ctor-heuristic
    --enable-pyside-extensions --enable-return-value-heuristic --use-isnull-as-nb_nonzero
    --avoid-protected-hack
    ${INCLUDES}
    -T${PYSIDE_TYPESYSTEMS}
    --output-directory=${CMAKE_CURRENT_BINARY_DIR}
    --api-version="${Qt5_VERSION_MAJOR}.${Qt5_VERSION_MINOR}"
)

# Specify which sources will be generated by shiboken, and their dependencies.
set(GENERATED_SOURCES
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/pybhawk_module_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/webview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabbedwebview_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/webpage_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/webhittestresult_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/desktopfile_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/plugininterface_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/loadrequest_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/qz_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/desktopnotificationsfactory_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/externaljsobject_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/pluginproxy_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/plugins_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/plugins_plugin_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/pluginspec_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/qtsingleapplication_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/squeezelabelv1_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/squeezelabelv2_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/lineedit_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/sidewidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/webtab_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/mainapplication_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/datapaths_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/settings_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/autosaver_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/browserwindow_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/pageformdata_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/passwordentry_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/passwordbackend_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/autofill_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/passwordmanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarkitem_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarkstools_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarks_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarksmodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarksfoldersmenu_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/bookmarksfoldersbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/cookiemanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/cookiejar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/downloaditem_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/downloadmanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/downloadmanager_downloadinfo_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/history_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/history_historyentry_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/historyitem_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/historymodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/locationbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/locationbar_loadaction_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/navigationbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/networkmanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/searchenginesdialog_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/searchenginesmanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/searchenginesmanager_engine_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/sidebarmanager_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/sidebarinterface_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/webinspector_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/combotabbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabcontextmenu_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabicon_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabicon_data_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabmodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabmrumodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabstackedwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabtreemodel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/tabwidget_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/searchtoolbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/checkboxdialog_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/qzsettings_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/statusbar_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/abstractbuttoninterface_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/abstractbuttoninterface_clickcontroller_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/clickablelabel_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/delayedfilewatcher_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/iconprovider_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/qztools_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/sqlqueryjob_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/sqldatabase_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/toolbutton_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/wheelhelper_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/menu_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/action_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/urlinterceptor_wrapper.cpp
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk/extensionschemehandler_wrapper.cpp
)
set(GENERATED_SOURCES_DEPENDENCIES
    ${GLOBAL_HEADER}
    ${TYPESYSTEM_FILE}
)

# Add custom target to run shiboken.
add_custom_command(OUTPUT ${GENERATED_SOURCES}
                    COMMAND Shiboken2::shiboken2
                    ${SHIBOKEN_OPTIONS} ${GLOBAL_HEADER} ${TYPESYSTEM_FILE}
                    DEPENDS ${GENERATED_SOURCES_DEPENDENCIES}
                    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                    COMMENT "Running generator for ${TYPESYSTEM_FILE}.")

# We need to include the headers for the module bindings that we use.
set(PYSIDE_ADDITIONAL_INCLUDES "")
get_target_property(PYSIDE_INCLUDE_DIRS PySide2::pyside2 INTERFACE_INCLUDE_DIRECTORIES)
foreach(INCLUDE_DIR ${PYSIDE_INCLUDE_DIRS})
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtCore")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtGui")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtNetwork")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtPrintSupport")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtWidgets")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtWebChannel")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtWebEngineCore")
    list(APPEND PYSIDE_ADDITIONAL_INCLUDES "${INCLUDE_DIR}/QtWebEngineWidgets")
endforeach()

set(PyBhawk_SRCS
    pythonplugin.cpp
    ${GENERATED_SOURCES}
)

add_library(PyBhawk MODULE ${PyBhawk_SRCS})
install(TARGETS PyBhawk DESTINATION ${MIDORI_INSTALL_PLUGINDIR})

target_include_directories(PyBhawk
    PRIVATE
    ${PYSIDE_ADDITIONAL_INCLUDES}
    ${CMAKE_SOURCE_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}/PyBhawk
)

target_link_libraries(PyBhawk
    PRIVATE
    MidoriPrivate
    Shiboken2::libshiboken
    PySide2::pyside2
    Python3::Python
)

# Same as CONFIG += no_keywords to avoid syntax errors in object.h due to the usage of the word Slot
target_compile_definitions(PyBhawk PRIVATE QT_NO_KEYWORDS)

if(BUILD_TESTING)
    add_subdirectory(autotests)
endif()

if (NOT DEBUG)
    target_precompile_headers(PyBhawk PRIVATE
        ${CMAKE_SOURCE_DIR}/src/plugins/PyBhawk/pybhawk_global.h
        ${CMAKE_SOURCE_DIR}/src/plugins/PyBhawk/pythonplugin.h
    )
endif()
